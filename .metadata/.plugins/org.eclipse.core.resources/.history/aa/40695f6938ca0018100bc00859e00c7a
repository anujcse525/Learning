package com.anuj.hackerrank;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.stream.Collectors;
import java.util.stream.IntStream;
import java.util.stream.Stream;

public class FrequencyQueries {

	static List<Integer> freqQuery(List<List<Integer>> queries) {
		List<Integer> result = new ArrayList<Integer>();
		Iterator<List<Integer>> itr = queries.iterator();
		while (itr.hasNext()) {
			List<Integer> query = itr.next();
			if (!query.isEmpty() && query.size() > 1) {
				if (query.get(0) == 1) {

				} else if (query.get(0) == 2) {
					
				} else if (query.get(0) == 3) {
					
				}
			}
		}
		return result;
	}

	public static void main(String[] args) throws NumberFormatException, IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int numQueries = Integer.parseInt(br.readLine().trim());
		List<List<Integer>> inputs = new ArrayList<>();
		IntStream.range(0, numQueries).forEach(i -> {
			try {
				inputs.add(Stream.of(br.readLine().replaceAll("\\s+$", "").split(" ")).map(Integer::parseInt)
						.collect(Collectors.toList()));
			} catch (IOException ex) {
				throw new RuntimeException(ex);
			}
		});
		List<Integer> result = freqQuery(inputs);
		System.out.println(result.toString());
		br.close();
	}

}
