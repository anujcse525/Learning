package com.anuj.tree;

import java.util.ArrayList;
import java.util.List;
import java.util.Stack;

public class PreOrderTreeTraversal {

	public List<Integer> recursivePreOrderTreeTraversal(TreeNode root) {
		List<Integer> result = new ArrayList<Integer>();

		if (root != null) {
			result.add(root.value);
			result.addAll(recursivePreOrderTreeTraversal(root.left));
			result.addAll(recursivePreOrderTreeTraversal(root.right));
		}

		return result;
	}

	public List<Integer> iterativePreOrderTreeTraversal(TreeNode root) {
		List<Integer> result = new ArrayList<Integer>();

		Stack<TreeNode> stack = new Stack<TreeNode>();
		if(root == null)
			return null;
		stack.push(root);
		
		while(!stack.isEmpty()){
			TreeNode current = stack.pop();
			result.add(current.value);
			
			stack.push(current.left);
			stack.push(current.right);
		}

		return result;
	}

}
