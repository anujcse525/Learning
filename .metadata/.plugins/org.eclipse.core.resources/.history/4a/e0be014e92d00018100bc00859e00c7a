package com.anuj.backtracking;

public class NQueenProblem {

	public static void main(String[] args) {

	}

	class Position {
		int row, column;

		public Position(int r, int c) {
			this.row = r;
			this.column = c;
		}
	}

	public Position[] solveNQueenProblem(int n) {
		Position[] positions = new Position[n];
		boolean hasSolution = solveNQueenProblem(n, 0, positions);
		if (hasSolution) {
			return positions;
		}

		return null;
	}

	private boolean solveNQueenProblem(int n, int row, Position[] positions) {

		if (n == row) {
			return true;
		}

		int col;
		for (col = 0; col < n; col++) {
			boolean foundSafe = true;

			for (int queen = 0; queen < row; queen++) {
				
			}
		}
		return false;
	}
}
