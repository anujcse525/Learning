package com.anuj.backtracking;

import java.util.Map;
import java.util.Map.Entry;
import java.util.TreeMap;

public class StringPermutation {

	public static void main(String[] args) {

	}

	public void permute(char[] input) {
		Map<Character, Integer> countMap = new TreeMap<>();
		for (char ch : input) {
			countMap.compute(ch, (key, value) -> {
				if (value == null) {
					return 1;
				} else {
					return value + 1;
				}
			});
		}

		char[] str = new char[countMap.size()];
		int[] count = new int[countMap.size()];

		int index = 0;
		for (Entry<Character, Integer> entry : countMap.entrySet()) {
			str[index] = (char) entry.getKey();
			count[index] = (int) entry.getValue();
		}
		char[] result = new char[count.length];
	}
}
